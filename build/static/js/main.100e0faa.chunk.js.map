{"version":3,"sources":["logo.svg","services/Settings.js","services/GetGif/getGifs.js","context/GifContext.js","components/hooks/useGifs.js","Pages/SearchGif/Index.js","components/hooks/useNearScreen.js","components/Gif/Gif.js","components/ListOfGif/Index.js","components/TrendingSearch/Popular.js","components/TrendingSearch/Pets.js","Pages/Home/Index.js","Logo.png","Pages/GifInformation/Index.js","components/hooks/useGlobalGif.js","context/StaticContext.js","App.js","reportWebVitals.js","index.js"],"names":["API_KEY","NUM_GIFS","getGifs","page","keyword","apiUrl","fetch","then","res","json","response","data","Array","isArray","map","image","images","title","id","url","downsized_medium","Context","React","createContext","GifContext","children","useState","gifs","setGifs","Provider","value","useGifs","useContext","loading","setLoading","loadingNextPage","setLoadingNextPage","setPage","keywordToUse","localStorage","getItem","useEffect","setItem","nextGifs","prevGifs","concat","SearchGif","params","externalRef","useRef","distance","once","isNearScreen","setShow","fromRef","observer","element","current","onChange","entries","isIntersecting","disconnect","Promise","resolve","IntersectionObserver","rootMargin","observe","useNearScreen","debounceHandleNextPage","useCallback","debounce","prevPage","console","log","ListOfGifs","ref","Gif","className","href","alt","src","GifsPopulares","TrendingSearchPopular","to","GifsMascotas","TrendingSearchPets","Home","setKeyword","useLocation","pushLocation","handleChange","evt","target","onSubmit","preventDefault","placeholder","type","onClick","GifInformation","gif","find","singleGif","name","App","StaticContext","Logo","component","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.100e0faa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const API_KEY= 'SCHPleGPC5IblXjbANaj8MjPnXi2jwTc'\nexport const NUM_GIFS= '18'","import {API_KEY,NUM_GIFS} from '../Settings'\n\nexport default function getGifs ({page = 0,keyword = 'Rick'} = {}) {\n   let apiUrl =  `https://api.giphy.com/v1/gifs/search?api_key=${API_KEY}&q=${keyword}&limit=${NUM_GIFS}&offset=${page*NUM_GIFS}&rating=g&lang=en`\n   return fetch(apiUrl)\n        .then(res => res.json())\n        .then(response => {\n            const {data} = response\n            if (Array.isArray(data)) {\n                const gifs = data.map(image => {\n                    const {images, title, id} = image\n                    const {url} = images.downsized_medium\n                    return {title, id, url}\n                })\n                return gifs\n            }\n        })\n}","import React, { useState } from \"react\";\n\nconst Context = React.createContext({})\nexport function GifContext({children}){\n    const [gifs,setGifs] = useState([])\n\n    return<Context.Provider value = {{gifs, setGifs}}>\n        {children}\n    </Context.Provider>\n}\nexport default Context","import React,{useContext, useState, useEffect} from \"react\";\nimport getGifs from \"../../services/GetGif/getGifs\";\nimport GifContext from \"../../context/GifContext\";\n\nconst INITIAL_PAGE = 0\n\nexport function useGifs({keyword} = {keyword : null}){\n    const {gifs,setGifs} = useContext(GifContext)\n    const [loading,setLoading] = useState(false)\n    const [loadingNextPage, setLoadingNextPage] = useState(false)\n    const [page,setPage] = useState(INITIAL_PAGE)\n    const keywordToUse = keyword || localStorage.getItem('lastKeyword') || 'random'\n\n\n    useEffect(function(){\n        setLoading(true)\n        \n        \n        getGifs({keyword : keywordToUse})\n            .then(gifs => setGifs(gifs))\n            setLoading(false)\n            localStorage.setItem('lastKeyword', keyword)\n    },[keyword])\n\n    useEffect(function (){\n        if (page == INITIAL_PAGE) return\n\n        setLoadingNextPage(true)\n\n        getGifs({keyword: keywordToUse, page})\n            .then(nextGifs =>{\n                setGifs(prevGifs => prevGifs.concat(nextGifs))\n                setLoadingNextPage(false)\n            })\n    },[page])\n    return {loading,loadingNextPage, gifs, setPage}\n}\n","import React, {useEffect,useState, useRef, useCallback} from \"react\";\nimport Gif from \"../../components/Gif/Gif\";\nimport getGifs from \"../../services/GetGif/getGifs\"\nimport \"../../App.css\"\nimport ListOfGifs from \"../../components/ListOfGif/Index\";\nimport { useGifs } from \"../../components/hooks/useGifs\";\nimport debounce from \"just-debounce-it\";\nimport { Link, Route } from \"wouter\";\nimport useNearScreen from \"../../components/hooks/useNearScreen\";\n\nexport default function SearchGif ({params}){\n    const { keyword } = params\n    const { loading, gifs, setPage } = useGifs({ keyword })\n    \n    const externalRef = useRef()\n    const {isNearScreen} = useNearScreen({\n      externalRef: loading ? null : externalRef,\n      once: false\n    })\n  \n    //const handleNextPage = () => setPage(prevPage => prevPage+1)\n    //const handleNextPage = ()=>console.log('next page')\n\n    const debounceHandleNextPage= useCallback(debounce(\n        ()=>setPage(prevPage => prevPage+1),500\n    ),[])\n\n    useEffect(function(){\n        console.log(isNearScreen)\n        if(isNearScreen) debounceHandleNextPage()\n    },[debounceHandleNextPage,isNearScreen])\n\n    return<>\n        {/* <button onClick={handleNextPage}>Get next page</button> */}\n        <br />\n        <ListOfGifs gifs={gifs} />\n        <div id=\"visor\" ref={externalRef}></div>\n    </>\n\n}","import {useEffect, useState, useRef} from 'react'\n\nexport default function useNearScreen ({ distance = '100px', externalRef, once = true } = {}) {\n  const [isNearScreen, setShow] = useState(false)\n  const fromRef = useRef()\n\n  useEffect(() => {\n    let observer\n\n    const element = externalRef ? externalRef.current : fromRef.current\n\n    const onChange = (entries, observer) => {\n      const el = entries[0]\n      if (el.isIntersecting) {\n        setShow(true)\n        once && observer.disconnect()\n      } else {\n        !once && setShow(false)\n      }\n    }\n\n    Promise.resolve(\n      typeof IntersectionObserver !== 'undefined'\n        ? IntersectionObserver\n        : import('intersection-observer')\n    ).then(() => {\n      observer = new IntersectionObserver(onChange, {\n        rootMargin: distance\n      })\n  \n      if (element) observer.observe(element)\n    })\n\n    return () => observer && observer.disconnect()\n  })\n\n  return {isNearScreen, fromRef}\n}","import React,{useEffect,useState} from 'react';\nimport '../../Layouts/Gif.css';\nimport '../../App.css'\nimport { Link, Route } from \"wouter\";\nimport SearchGif from '../../Pages/SearchGif/Index';\n\nexport default function Gif ({title, url, id}){\n    return<>\n        <section className=\"col-4\">\n            <Link href= {`gif/${id}`} className=\"Gif-link Gif Gif-Container\">\n                <img loading='lazy' alt={title} src={url} />\n                <h4>{title}</h4>\n            </Link>\n        </section>\n    </>\n}","import react,{useEffect,useState} from \"react\";\nimport Gif from \"../Gif/Gif\";\nimport getGifs from \"../../services/GetGif/getGifs\"\nimport \"../../App.css\"\nimport \"./Style.css\"\n\nexport default function ListOfGifs ({gifs}){    \n    return <div className=\"row\">\n        {\n            gifs.map(({id, title, url})=>\n            <Gif \n            id={id}\n            key={id}\n            title={title} \n            url={url}\n            />\n            ) \n        }\n        </div>    \n}","import React from \"react\";\nimport {Link} from \"wouter\";\n\nconst GifsPopulares = ['Naruto','Suits','Scary','Memes']\nconst GifsMascotas = ['Perros','Gatos']\n\nexport default function TrendingSearchPopular (){\n    return<>\n        {GifsPopulares.map((GifsPopulares)=>(\n            <li className=\"text-left\" key={GifsPopulares}>\n                <Link to = {`/gif/${GifsPopulares}`}>{GifsPopulares}</Link>\n            </li>\n            )\n        )}\n    </>\n}","import {Link} from \"wouter\";\n\nconst GifsMascotas = ['Perros','Gatos']\n\nexport default function TrendingSearchPets (){\n    return <>\n        {GifsMascotas.map((GifsMascotas)=>(\n            <li className=\"text-left\" key={GifsMascotas}>\n                <Link to = {`/gif/${GifsMascotas}`}>{GifsMascotas}</Link>\n            </li>\n            )\n        )}\n    </>\n}","import React,{useEffect, useState} from 'react';\nimport '../../App.css';\nimport ListOfGifs from '../../components/ListOfGif/Index';\nimport './Home.css'\nimport getGifs from '../../services/GetGif/getGifs'\nimport { Link, Route,useLocation } from \"wouter\";\nimport { useGifs } from '../../components/hooks/useGifs';\nimport TrendingSearchPopular from '../../components/TrendingSearch/Popular';\nimport TrendingSearchPets from '../../components/TrendingSearch/Pets';\n\nexport default function Home (){\n    const [keyword,setKeyword] = useState ('')\n    const [path,pushLocation] = useLocation()\n    const {loading,gifs} = useGifs([])\n    \n    const handleSubmit = evt =>{\n        evt.preventDefault()\n        pushLocation(`/gif/${keyword}`)\n    }\n\n    const handleChange = evt =>{\n        setKeyword(evt.target.value)\n    }\n    \n    return(\n        <>\n            <form onSubmit={handleSubmit}>\n                <input placeholder='Search the gif...' onChange={handleChange} type='text' value={keyword}></input>\n                <button onClick={handleChange} value={keyword}>Search</button>\n            </form>\n            <div className = \"container-fluid\">\n                <div className = \"row\">\n                    <div className = \"col-md-8\">\n                        <div className = \"Last-Search\">\n                            <h3 className='App-title'>Ultima Busqueda</h3>\n                            <ListOfGifs gifs={gifs} />\n                        </div>\n                    </div>\n                    <div className = \"col-md-4\">\n                        <div className=\"Popular-Links\">\n                            <h3 className='App-title'>Los GIFS mas populares</h3>\n                            <TrendingSearchPopular/>\n\n                            <h3 className='App-title'>GIFS de mascotas</h3>\n                            <TrendingSearchPets/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    ) \n}","export default __webpack_public_path__ + \"static/media/Logo.a9983596.png\";","import React from \"react\";\nimport Gif from '../../components/Gif/Gif'\nimport './GifInformation.css'\nimport useGlobalGif from \"../../components/hooks/useGlobalGif\";\nimport '../../Layouts/Gif.css'\n\nexport default function GifInformation ({params}){\n    const gifs = useGlobalGif()\n    const gif = gifs.find(singleGif => \n        singleGif.id == params.id\n    )\n\n    return <div className = \"Gif-Info\">\n        <Gif {...gif} />\n    </div>\n}","import React,{useContext} from \"react\";\nimport GifContext from \"../../context/GifContext\";\n\nexport default function useGlobalGif () {\n    const {gifs} = useContext(GifContext)\n    return gifs\n}\n","import React from \"react\";\n\nconst Context = React.createContext({\n    name : 'midudev'\n})\n\nexport default Context","import React,{useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport ListOfGifs from './components/ListOfGif/Index';\nimport Home from './Pages/Home/Index'\nimport Logo from \"./Logo.png\"\nimport SearchGif from './Pages/SearchGif/Index';\n\nimport { Link, Route } from \"wouter\";\nimport GifInformation from './Pages/GifInformation/Index';\nimport StaticContext from './context/StaticContext';\nimport {GifContext} from './context/GifContext'\n\n\nfunction App() {\n  const [keyword,setKeyword] = useState ([])\n  return (\n    <StaticContext.Provider value = {\n      {\n        name: 'midudev',\n      }\n    }>\n      <div className=\"App-content\">\n        <div>\n          <Link to =\"/\">\n            <img className=\"Logo\" src={Logo}/>\n          </Link>\n        </div>\n        <section className=\"App-link text-center\">\n          <GifContext>\n            <Route \n              component={Home}\n              path=\"/\"\n            />\n            <Route \n              component={SearchGif}\n              path=\"/gif/:keyword\"\n            />\n            <Route\n              component = {GifInformation}\n              path = \"/gif/gif/:id\"\n            />\n          </GifContext>\n        </section>\n      </div>\n    </StaticContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}